#include <iostream>
#include <windows.h>
#include <cstdlib>
#include <wchar.h>
using namespace std;
int main() {

    GUID guid;
    CoCreateGuid(&guid);


    WCHAR guidString[37];
    swprintf_s(guidString, L"%08X-%04X-%04X-%012X%06X", guid.Data1, guid.Data2, guid.Data3, guid.Data4[0], guid.Data4[1], guid.Data4[2], guid.Data4[3], guid.Data4[4], guid.Data4[5], guid.Data4[6], guid.Data4[7]);


    srand(time(NULL));
    for (int i = 0; i < 37; i++) {
        guidString[i] = (rand() % 26) + 48;
    }


    if (!SetEnvironmentVariable(TEXT("HARDWARE_GUID"), guidString)) {
        cout << "Failed to set environment variable." << endl;
        return 1;
    }


    STARTUPINFO si;
    PROCESS_INFORMATION pi;
    ZeroMemory(&si, sizeof(si));
    si.cb = sizeof(si);

    ZeroMemory(&pi, sizeof(pi));
    if (!CreateProcess(NULL, const_cast<LPWSTR>(guidString), NULL, NULL, FALSE, CREATE_DEFAULT_ERROR_MODE, NULL, NULL, &si, &pi)) {
        cout << "Failed to launch EXE." << endl;
        return 1;
    }


    WaitForSingleObject(pi.hProcess, INFINITE);

   
    CloseHandle(pi.hProcess);
    CloseHandle(pi.hThread);

    return 0;
}

// improve overall code generated by templated GPT
